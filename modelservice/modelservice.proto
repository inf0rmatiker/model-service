syntax = "proto3";

// --------- Service Definitions ----------

service Master {

  // Creates individual BuildModels requests for workers, tracking the job
  rpc BuildModels (BuildModelsRequest) returns (BuildModelsResponse) {}

  // Queries the built models by spatial extent
  rpc GetModels (GetModelRequest) returns (GetModelResponse) {}

  // Registers a Worker to track
  rpc RegisterWorker (WorkerRegistrationRequest) returns (WorkerRegistrationResponse) {}

  // De-registers a Worker from tracking
  rpc DeregisterWorker (WorkerRegistrationRequest) returns (WorkerRegistrationResponse) {}
}

service Worker {

  // Builds models at the worker level by training/testing on queried data
  rpc BuildModels (BuildModelsRequest) returns (BuildModelsResponse) {}

  // Queries the local built models at the worker level
  rpc GetModels (GetModelRequest) returns (GetModelResponse) {}
}

// --------- Message Definitions ----------

message BuildModelsRequest {
  string id = 1;
  ModelFramework model_framework = 2;
  ModelCategory model_category = 3;
  repeated string feature_fields = 4;
  string label_field = 5;
  bool normalize_inputs = 6;
  ValidationBudget validation_budget = 7;
  LossFunction loss_function = 8;
}

message BuildModelsResponse {
  string id = 1;
  bool ok = 2;
  string error_msg = 3;
  double duration_sec = 4;
  repeated WorkerValidationJobResponse worker_responses = 5;
}

message WorkerValidationJobResponse {
  bool ok = 1;
  string hostname = 2;
  double duration_sec = 3;
  repeated ValidationMetric metrics = 4;
}

message ValidationMetric {
  string gis_join = 1;
  int64  allocation = 2;
  double loss = 3;
  double accuracy = 4;
  double variance = 5;
  double duration_sec = 6;
  bool ok = 7;
  string error_msg = 8;
}

message GetModelRequest {
  string model_id = 1;
  string gis_joins = 2;
}

message GetModelResponse {
  string model_id = 1;
  string filename = 2;
  bytes data = 3;
}

message GisJoinMetadata {
  string gis_join = 1;
}

message IncrementalVarianceBudget {
  int64 total_budget = 1; // Total budget
  int64 initial_allocation = 2; // Initial equal allocation for all GISJOINs
}

message StaticBudget {
  int64 total_limit = 1; // Gets translated into a equal-proportion limit on each GISJOIN
  int64 strata_limit = 2; // Specifies a limit each GISJOIN
  float sample_rate = 3; // Specifies a fixed sampling rate for each GISJOIN
}

message ValidationBudget {
  BudgetType budget_type = 1;
  StaticBudget static_budget = 2;
  IncrementalVarianceBudget variance_budget = 3;
}

message WorkerRegistrationRequest {
  string hostname = 1;
  int32 port = 2;
  repeated GisJoinMetadata local_gis_joins = 3;
}

message WorkerRegistrationResponse {
  bool success = 1;
}


// --------- Enum Definitions ----------


enum BudgetType {
  DEFAULT_BUDGET = 0;
  STATIC_BUDGET = 1;
  INCREMENTAL_VARIANCE_BUDGET = 2;
}

enum LossFunction {
  MEAN_SQUARED_ERROR = 0;
  MEAN_ABSOLUTE_ERROR = 1;
  ROOT_MEAN_SQUARED_ERROR = 2;
  NEGATIVE_LOG_LIKELIHOOD_LOSS = 3;
  CROSS_ENTROPY_LOSS = 4;
}

enum ModelCategory {
  REGRESSION = 0;
}

enum ModelFramework {
  TENSORFLOW = 0;
  SCIKIT_LEARN = 1;
  PYTORCH = 2;
}
