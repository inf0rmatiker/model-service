syntax = "proto3";

// --------- Service Definitions ----------

service Master {

  // Creates individual BuildModels requests for workers, tracking the job
  rpc BuildModels (BuildModelsRequest) returns (BuildModelsResponse) {}

  // Queries the built models by spatial extent
  rpc GetModel (GetModelRequest) returns (GetModelResponse) {}

  // Validates a set of already-built models
  rpc ValidateModels (ValidateModelsRequest) returns (ValidateModelsResponse) {}

  // Registers a Worker to track
  rpc RegisterWorker (WorkerRegistrationRequest) returns (WorkerRegistrationResponse) {}

  // De-registers a Worker from tracking
  rpc DeregisterWorker (WorkerRegistrationRequest) returns (WorkerRegistrationResponse) {}
}

service Worker {

  // Builds models at the worker level by training/testing on queried data
  rpc BuildModels (BuildModelsRequest) returns (WorkerBuildModelsResponse) {}

  // Validates models under an id
  rpc ValidateModels (ValidateModelsRequest) returns (ValidateModelsResponse) {}

  // Queries the local built models at the worker level
  rpc GetModel (GetModelRequest) returns (GetModelResponse) {}
}

// --------- Message Definitions ----------

message BuildModelsRequest {
  string id = 1;  // not present in request to master, but present in requests to workers
  string label_field = 2;
  repeated string feature_fields = 3;
  repeated string gis_joins = 4;  // not present in request to master, but present in requests to workers
  HyperParameters hyper_parameters = 5;
}

message BuildModelsResponse {
  string id = 1;
  float duration_sec = 2;
  bool error_occurred = 3;
  string error_msg = 4;
  repeated WorkerBuildModelsResponse worker_responses = 5;
}

message WorkerBuildModelsResponse {
  string id = 1;
  string hostname = 2;
  float duration_sec = 3;
  bool error_occurred = 4;
  string error_msg = 5;
  repeated EvaluationMetric validation_metrics = 6;
}

message ValidateModelsRequest {
  string id = 1;
}

message ValidateModelsResponse {
  string id = 1;
  repeated EvaluationMetric validation_metrics = 2;
}

message GetModelRequest {
  string model_id = 1;
  string gis_join = 2;
}

message GetModelResponse {
  string model_id = 1;
  bool error_occurred = 2;
  string error_msg = 3;
  string filename = 4;
  bytes data = 5;
}

message WorkerRegistrationRequest {
  string hostname = 1;
  int32 port = 2;
  repeated GisJoinMetadata local_gis_joins = 3;
}

message WorkerRegistrationResponse {
  bool success = 1;
}

message EvaluationMetric {
  float training_loss = 1;
  float validation_loss = 2;
  float true_loss = 3;
  float duration_sec = 4;
  bool error_occurred = 5;
  string error_message = 6;
  GisJoinMetadata gis_join_metadata = 7;
}

message GisJoinMetadata {
  string gis_join = 1;
  int64 count = 2;
}

message HyperParameters {
  int32 epochs = 1;
  int32 batch_size = 2;
  float learning_rate = 3;
  bool normalize_inputs = 4;
  float train_split = 5;  // Fraction of data to use as training data. Default = 0.8
  OptimizerType optimizer_type = 6;
  LossType loss_type = 7;

  // Model specification
  InputLayer input_layer = 8;
  repeated HiddenLayer hidden_layers = 9;
  OutputLayer output_layer = 10;
}

message InputLayer {
  ActivationType activation = 1;
  string name = 2;
}

message HiddenLayer {
  ActivationType activation = 1;
  string name = 2;
  int32 units = 3;
}

message OutputLayer {
  ActivationType activation = 1;
  string name = 2;
}

// --------- Enum Definitions ----------

enum OptimizerType {
  ADAM = 0;
  SGD = 1;
}

enum LossType {
  MEAN_SQUARED_ERROR = 0;
  ROOT_MEAN_SQUARED_ERROR = 1;
  MEAN_ABSOLUTE_ERROR = 2;
}

enum ActivationType {
  RELU = 0;
}
